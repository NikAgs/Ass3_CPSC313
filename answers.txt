a.	Because the array is accessed and stored in row major order, each cache miss will add the the 64 byte block that is accessed over the next 7 cache reads of 8 bytes each. Hence, the miss rate is 1/8 = 12.5%.

b.	Now the array is accessed in column major order and stored in row major order. Each row is separated by 8 x 128 = 1024 bytes which corresponds to 16 cache blocks. Thus, when we access a[2][0], we replace the block containing a[0][0]. By the time we access a[0][1], the cached block is long gone. The same applies to a[0][2] and so on. Hence, 100% miss rate.

c.	At every iteration in our nested for loops, we perform 4 cache reads. Because we are still accessing the array in column major order, we would have a 100% miss rate except for the fact that in each iteration we access both a[i][j], a[i][j+1] and a[i+1][j], a[i+1][j+1]. The former access in each pair will add the data accessed by the latter. Hence, 2/4 = 50% miss rate.
